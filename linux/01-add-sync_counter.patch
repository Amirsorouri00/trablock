diff --git a/include/linux/sched.h b/include/linux/sched.h
index 467d26046416..268cde0b4fad 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1280,6 +1280,7 @@ struct task_struct {
 	unsigned long			lowest_stack;
 	unsigned long			prev_lowest_stack;
 #endif
+	unsigned long			sync_counter;	//  2
 
 	/*
 	 * New fields for task_struct should be added above here, so that
diff --git a/mm/process_vm_access.c b/mm/process_vm_access.c
index 357aa7bef6c0..d19566bc9bc2 100644
--- a/mm/process_vm_access.c
+++ b/mm/process_vm_access.c
@@ -265,6 +265,23 @@ static ssize_t process_vm_rw(pid_t pid,
 	struct iov_iter iter;
 	ssize_t rc;
 	int dir = vm_write ? WRITE : READ;
+	//struct task_struct *current_task_called = NULL;
+
+	// 
+
+	if (current->pid == pid)
+	{
+		if (dir == READ)
+		{
+			printk("a reader has jut requested to block-free wait: %u %lu\n", pid, current->sync_counter);
+			current->sync_counter += liovcnt;
+			// maye adding some scheduling codes to release the CPU.
+			rc = 0;
+			goto free_iovecs;
+		}
+	}
+
+	// 
 
 	if (flags != 0)
 		return -EINVAL;
@@ -283,6 +300,13 @@ static ssize_t process_vm_rw(pid_t pid,
 
 	rc = process_vm_rw_core(pid, &iter, iov_r, riovcnt, flags, vm_write);
 
+	// change current_task_called to the target
+	if (dir == WRITE)
+	{
+		//current_task_called->sync_counter = current_task_called->sync_counter < riovcnt ? 0 : current_task_called->sync_counter - riovcnt;
+		printk("a reader has jut requested to block-free wait: %u %lu\n", pid, riovcnt);
+	}
+
 free_iovecs:
 	if (iov_r != iovstack_r)
 		kfree(iov_r);
